// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApi.Data.EF;

#nullable disable

namespace WebApi.Migrations
{
    [DbContext(typeof(ThietbiDbContext))]
    [Migration("20250901031622_tonghoprole-update-01")]
    partial class tonghoproleupdate01
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Api.Data.Entites.Danhmuctoitruc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HangSanXuat")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("LoaiThietBi")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NamSanXuat")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("TenThietBi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("TinhTrang")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Danhmuctoitruc");
                });

            modelBuilder.Entity("Api.Data.Entites.ThongsokythuatToitruc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DanhmuctoitrucId")
                        .HasColumnType("int");

                    b.Property<string>("DonViTinh")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("ThongSo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("DanhmuctoitrucId");

                    b.ToTable("ThongsokythuatToitruc");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AppRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AppUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("AppUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.ToTable("AppUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = new Guid("69bd714f-9576-45ba-b5b7-f00649be00de"),
                            RoleId = new Guid("8d04dce2-969a-435d-bba4-df3f325983dc")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("AppUserTokens", (string)null);
                });

            modelBuilder.Entity("WebApi.Data.Entites.AppRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8d04dce2-969a-435d-bba4-df3f325983dc"),
                            Description = "Administrator role",
                            Name = "admin",
                            NormalizedName = "admin"
                        });
                });

            modelBuilder.Entity("WebApi.Data.Entites.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("69bd714f-9576-45ba-b5b7-f00649be00de"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "40d31150-469a-42fd-93fd-88babbeb1390",
                            Dob = new DateTime(1979, 2, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "hunglq7@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Hùng",
                            FullName = "Lê Quang Hùng",
                            LastName = "Lê",
                            LockoutEnabled = false,
                            NormalizedEmail = "hunglq7@gmail.com",
                            NormalizedUserName = "admin",
                            PasswordHash = "AQAAAAIAAYagAAAAEIqXJQivRR1CMn4MzcxWnFk1ylwYVUsKK2nXdQuVsoQHmfTRRRMi00l/dpD2pU/Hbg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            TwoFactorEnabled = false,
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("WebApi.Data.Entites.Camera", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("HangSanXuat")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NamSanXuat")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NuocSanXuat")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TenThietBI")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ThongSoKyThuat")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Camera");
                });

            modelBuilder.Entity("WebApi.Data.Entites.Capdien", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ghichu")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Tenthietbi")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("Capdien");
                });

            modelBuilder.Entity("WebApi.Data.Entites.ChiTietPhieuNhap", b =>
                {
                    b.Property<int>("PhieuNhapId")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<int>("VatTuId")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.Property<int>("DonViTinhId")
                        .HasColumnType("int");

                    b.Property<int>("SoLuongNhap")
                        .HasColumnType("int");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("PhieuNhapId", "VatTuId");

                    b.HasIndex("DonViTinhId");

                    b.HasIndex("VatTuId");

                    b.ToTable("ChiTietPhieuNhap");
                });

            modelBuilder.Entity("WebApi.Data.Entites.ChiTietPhieuXuat", b =>
                {
                    b.Property<int>("PhieuXuatId")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<int>("VatTuId")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.Property<int>("DonViTinhId")
                        .HasColumnType("int");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("PhieuXuatId", "VatTuId");

                    b.HasIndex("DonViTinhId");

                    b.HasIndex("VatTuId");

                    b.ToTable("ChiTietPhieuXuat");
                });

            modelBuilder.Entity("WebApi.Data.Entites.ChucVu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TenChucVu")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("ChucVu");
                });

            modelBuilder.Entity("WebApi.Data.Entites.DanhMucBangTai", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenBangTai")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("DanhMucBangTai");
                });

            modelBuilder.Entity("WebApi.Data.Entites.DanhMucKhoan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("LoaiThietBi")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TenThietBi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("DanhMucKhoan");
                });

            modelBuilder.Entity("WebApi.Data.Entites.DanhMucRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoaiThietBi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TenThietBi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DanhMucRole");
                });

            modelBuilder.Entity("WebApi.Data.Entites.DanhmucAptomatKhoidongtu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoaiThietBi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TenThietBi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DanhmucAptomatKhoidongtu");
                });

            modelBuilder.Entity("WebApi.Data.Entites.DanhmucBaLang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoaiThietBi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TenThietBi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DanhmucBalang");
                });

            modelBuilder.Entity("WebApi.Data.Entites.DanhmucBienap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoaiThietBi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TenThietBi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DanhmucBienap");
                });

            modelBuilder.Entity("WebApi.Data.Entites.DanhmucBomnuoc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("LoaiThietBi")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TenThietBi")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("DanhmucBomnuoc");
                });

            modelBuilder.Entity("WebApi.Data.Entites.DanhmucMayCao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoaiThietBi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TenThietBi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DanhmucMayCao");
                });

            modelBuilder.Entity("WebApi.Data.Entites.DanhmucNeo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("LoaiThietBi")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TenThietBi")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("DanhmucNeo");
                });

            modelBuilder.Entity("WebApi.Data.Entites.DanhmucQuatgio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("LoaiThietBi")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TenThietBi")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("DanhmucQuatgio");
                });

            modelBuilder.Entity("WebApi.Data.Entites.Danhmucgiacotthuyluc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoaiThietBi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TenThietBi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Danhmucgiacotthuyluc");
                });

            modelBuilder.Entity("WebApi.Data.Entites.DonViTinh", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TenDonViTinh")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("DonViTinh");
                });

            modelBuilder.Entity("WebApi.Data.Entites.LoaiThietBi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TenLoai")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("LoaiThietBi");
                });

            modelBuilder.Entity("WebApi.Data.Entites.MayXuc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HangSanXuat")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("LoaiThietBi")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NamSanXuat")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("TenThietBi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("TinhTrang")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("MayXuc");
                });

            modelBuilder.Entity("WebApi.Data.Entites.NhanVien", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ChucVuId")
                        .HasColumnType("int");

                    b.Property<string>("DiaChi")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("DienThoai")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HinhAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<int>("PhongBanId")
                        .HasColumnType("int");

                    b.Property<string>("SoThe")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("TenNhanVien")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ChucVuId");

                    b.HasIndex("PhongBanId");

                    b.ToTable("NhanVien");
                });

            modelBuilder.Entity("WebApi.Data.Entites.NhanvienImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Caption")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<int>("NhanVienId")
                        .HasColumnType("int");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NhanVienId");

                    b.ToTable("NhanvienImage");
                });

            modelBuilder.Entity("WebApi.Data.Entites.NhatKyBangTai", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DonVi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Ngaythang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TongHopBangTaiId")
                        .HasColumnType("int");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ViTri")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("TongHopBangTaiId");

                    b.ToTable("NhatKyBangTai");
                });

            modelBuilder.Entity("WebApi.Data.Entites.NhatKyBomNuoc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DonVi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Ngaythang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TongHopBomNuocId")
                        .HasColumnType("int");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ViTri")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("TongHopBomNuocId");

                    b.ToTable("NhatKyBomNuoc");
                });

            modelBuilder.Entity("WebApi.Data.Entites.NhatKyMayCao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DonVi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("NgayThang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TongHopMayCaoId")
                        .HasColumnType("int");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ViTri")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("TongHopMayCaoId");

                    b.ToTable("NhatKyMayCao");
                });

            modelBuilder.Entity("WebApi.Data.Entites.NhatKyQuatGio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DonVi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Ngaythang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TonghopquatgioId")
                        .HasColumnType("int");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ViTri")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("TonghopquatgioId");

                    b.ToTable("NhatKyQuatGio");
                });

            modelBuilder.Entity("WebApi.Data.Entites.NhatkyCamera", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CameraId")
                        .HasColumnType("int");

                    b.Property<int>("DonViQuanLyId")
                        .HasColumnType("int");

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayThang")
                        .HasColumnType("datetime2");

                    b.Property<string>("TinhTrang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.Property<string>("ViTriSuDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CameraId");

                    b.HasIndex("DonViQuanLyId");

                    b.ToTable("NhatkyCamera");
                });

            modelBuilder.Entity("WebApi.Data.Entites.NhatkyMayxuc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DonVi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ngaythang")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<int>("TonghopmayxucId")
                        .HasColumnType("int");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViTri")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("TonghopmayxucId");

                    b.ToTable("NhatkyMayxuc");
                });

            modelBuilder.Entity("WebApi.Data.Entites.NhatkyTonghoptoitruc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DonVi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ngaythang")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<int>("TonghoptoitrucId")
                        .HasColumnType("int");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViTri")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("TonghoptoitrucId");

                    b.ToTable("NhatkyTonghoptoitruc");
                });

            modelBuilder.Entity("WebApi.Data.Entites.Nhatkyaptomatkhoidongtu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DonVi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("NgayThang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ThongsoAptomatKhoidongtuId")
                        .HasColumnType("int");

                    b.Property<int>("TonghopaptomatkhoidongtuId")
                        .HasColumnType("int");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ViTri")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("ThongsoAptomatKhoidongtuId");

                    b.HasIndex("TonghopaptomatkhoidongtuId");

                    b.ToTable("Nhatkyaptomatkhoidongtu");
                });

            modelBuilder.Entity("WebApi.Data.Entites.PhieuNhap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("MaPhieuNhap")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nchar");

                    b.Property<DateTime>("NgayNhap")
                        .HasColumnType("datetime2");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("PhieuNhap");
                });

            modelBuilder.Entity("WebApi.Data.Entites.PhieuXuat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("MaPhieuXuat")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nchar");

                    b.Property<DateTime>("NgayXuat")
                        .HasColumnType("datetime2");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("PhieuXuat");
                });

            modelBuilder.Entity("WebApi.Data.Entites.PhongBan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TenPhong")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("PhongBan");
                });

            modelBuilder.Entity("WebApi.Data.Entites.TheoDoiSuaChua", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BienPhap")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgaySuDung")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayThay")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguyenNhan")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("NhanVienId")
                        .HasColumnType("int");

                    b.Property<int>("PhongBanId")
                        .HasColumnType("int");

                    b.Property<string>("ThayThe")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TinhTrangThietBi")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("TongHopThietBiId")
                        .HasColumnType("int");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("NhanVienId");

                    b.HasIndex("PhongBanId");

                    b.HasIndex("TongHopThietBiId");

                    b.ToTable("TheoDoiSuaChua");
                });

            modelBuilder.Entity("WebApi.Data.Entites.ThongSoBomNuoc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BomNuocId")
                        .HasColumnType("int");

                    b.Property<string>("DonViTinh")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ThongSo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("BomNuocId");

                    b.ToTable("ThongSoBomNuoc");
                });

            modelBuilder.Entity("WebApi.Data.Entites.ThongSoKyThuatBangTai", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BangTaiId")
                        .HasColumnType("int");

                    b.Property<string>("DonViTinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoiDung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThongSo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BangTaiId");

                    b.ToTable("ThongSoKyThuatBangTai");
                });

            modelBuilder.Entity("WebApi.Data.Entites.ThongSoKyThuatBienAp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BienApId")
                        .HasColumnType("int");

                    b.Property<string>("DonViTinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoiDung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThongSo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BienApId");

                    b.ToTable("ThongSoKyThuatBienAp");
                });

            modelBuilder.Entity("WebApi.Data.Entites.ThongSoKyThuatMayCao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DonViTinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MayCaoId")
                        .HasColumnType("int");

                    b.Property<int?>("NhatKyMayCaoId")
                        .HasColumnType("int");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThongSo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MayCaoId");

                    b.HasIndex("NhatKyMayCaoId");

                    b.ToTable("ThongSoKyThuatMayCao");
                });

            modelBuilder.Entity("WebApi.Data.Entites.ThongsoAptomatKhoidongtu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DanhmucaptomatKhoidongtuId")
                        .HasColumnType("int");

                    b.Property<string>("DonViTinh")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("ThongSo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("DanhmucaptomatKhoidongtuId");

                    b.ToTable("ThongsoAptomatKhoidongtu");
                });

            modelBuilder.Entity("WebApi.Data.Entites.ThongsoNeo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DonViTinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NeoId")
                        .HasColumnType("int");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThongSo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NeoId");

                    b.ToTable("ThongSoNeo");
                });

            modelBuilder.Entity("WebApi.Data.Entites.ThongsoQuatgio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DonViTinh")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("QuatgioId")
                        .HasColumnType("int");

                    b.Property<string>("ThongSo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("QuatgioId");

                    b.ToTable("ThongsoQuatgio");
                });

            modelBuilder.Entity("WebApi.Data.Entites.ThongsokythuatMayxuc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DonViTinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MayXucId")
                        .HasColumnType("int");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThongSo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MayXucId");

                    b.ToTable("ThongsokythuatMayxuc");
                });

            modelBuilder.Entity("WebApi.Data.Entites.ToiTruc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApLucKhiNen")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ChieuDaiCapQuan")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CongSuat")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DienAp")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DuongKinhCap")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("GiChu")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("HangSX")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("KichThuocNgoaiHinh")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LucKeo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LuongKhiNenTieuHao")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MaHieu")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MaQuanLy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NamSX")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NuocSX")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SoVongQuay")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TenLoai")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TocDoKeoCham")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TocDoKeoNhanh")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TrongLuongToi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ToiTruc");
                });

            modelBuilder.Entity("WebApi.Data.Entites.TongHopAptomatKhoidongtu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DonViId")
                        .HasColumnType("int");

                    b.Property<bool>("DuPhong")
                        .HasColumnType("bit");

                    b.Property<string>("GhiChu")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("MaQuanLy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayKiemDinh")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayLap")
                        .HasColumnType("datetime2");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<string>("TinhTrangThietBi")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ViTriLapDat")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("aptomatkhoidongtuId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DonViId");

                    b.HasIndex("aptomatkhoidongtuId");

                    b.ToTable("TongHopAptomatKhoidongtu");
                });

            modelBuilder.Entity("WebApi.Data.Entites.TongHopBangTai", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BangTaiId")
                        .HasColumnType("int");

                    b.Property<int>("ConLan")
                        .HasColumnType("int");

                    b.Property<int>("DayBang")
                        .HasColumnType("int");

                    b.Property<int>("DonViId")
                        .HasColumnType("int");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KhungBangRoi")
                        .HasColumnType("int");

                    b.Property<int>("KhungDau")
                        .HasColumnType("int");

                    b.Property<int>("KhungDuoi")
                        .HasColumnType("int");

                    b.Property<int>("Lmay")
                        .HasColumnType("int");

                    b.Property<string>("MaHieu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayLap")
                        .HasColumnType("datetime2");

                    b.Property<int>("Nmay")
                        .HasColumnType("int");

                    b.Property<string>("TinhTrangThietBi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViTriLapDat")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BangTaiId");

                    b.HasIndex("DonViId");

                    b.ToTable("TongHopBangTai");
                });

            modelBuilder.Entity("WebApi.Data.Entites.TongHopBomNuoc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BomNuocId")
                        .HasColumnType("int");

                    b.Property<int>("DonViId")
                        .HasColumnType("int");

                    b.Property<bool>("DuPhong")
                        .HasMaxLength(500)
                        .HasColumnType("bit");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaQuanLy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("NgayLap")
                        .HasColumnType("datetime2");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<string>("TinhTrangThietBi")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ViTriLapDat")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("BomNuocId");

                    b.HasIndex("DonViId");

                    b.ToTable("TongHopBomNuoc");
                });

            modelBuilder.Entity("WebApi.Data.Entites.TongHopKhoan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DonViId")
                        .HasColumnType("int");

                    b.Property<string>("DonViTinh")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("KhoanId")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayLap")
                        .HasColumnType("datetime2");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<string>("TinhTrangKyThuat")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ViTriLapDat")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("DonViId");

                    b.HasIndex("KhoanId");

                    b.ToTable("TongHopKhoan");
                });

            modelBuilder.Entity("WebApi.Data.Entites.TongHopMayCao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("ChieuDaiMay")
                        .HasColumnType("float");

                    b.Property<int>("DonViId")
                        .HasColumnType("int");

                    b.Property<string>("GhiChu")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("MaQuanLy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("MayCaoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayLap")
                        .HasColumnType("datetime2");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<int>("SoLuongCauMang")
                        .HasColumnType("int");

                    b.Property<int>("SoLuongXich")
                        .HasColumnType("int");

                    b.Property<string>("TinhTrangThietBi")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ViTriLapDat")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("DonViId");

                    b.HasIndex("MayCaoId");

                    b.ToTable("TongHopMayCao");
                });

            modelBuilder.Entity("WebApi.Data.Entites.TongHopMayXuc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("DuPhong")
                        .HasMaxLength(500)
                        .HasColumnType("bit");

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LoaiThietBiId")
                        .HasMaxLength(200)
                        .HasColumnType("int");

                    b.Property<string>("MaQuanLy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("MayXucId")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayLap")
                        .HasColumnType("datetime2");

                    b.Property<int>("PhongBanId")
                        .HasMaxLength(200)
                        .HasColumnType("int");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<string>("TinhTrang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViTriLapDat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LoaiThietBiId");

                    b.HasIndex("MayXucId");

                    b.HasIndex("PhongBanId");

                    b.ToTable("TongHopMayXuc");
                });

            modelBuilder.Entity("WebApi.Data.Entites.TongHopNeo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DonViId")
                        .HasColumnType("int");

                    b.Property<string>("DonViTinh")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("NeoId")
                        .HasColumnType("int");

                    b.Property<string>("NgayLap")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<string>("TinhTrangKyThuat")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ViTriLapDat")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("DonViId");

                    b.HasIndex("NeoId");

                    b.ToTable("TongHopNeo");
                });

            modelBuilder.Entity("WebApi.Data.Entites.TongHopRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("DuPhong")
                        .HasColumnType("bit");

                    b.Property<string>("GhiChu")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("NgayLap")
                        .HasColumnType("datetime2");

                    b.Property<int>("PhongBanId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<string>("TinhTrangThietBi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ViTriLapDat")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("PhongBanId");

                    b.HasIndex("RoleId");

                    b.ToTable("TongHopRole");
                });

            modelBuilder.Entity("WebApi.Data.Entites.TongHopThietBi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DonViTinhId")
                        .HasColumnType("int");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HinhAnh")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("LoaiThietBiId")
                        .HasColumnType("int");

                    b.Property<string>("MaThietBi")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("NgaySuDung")
                        .HasColumnType("datetime2");

                    b.Property<int>("NhanVienId")
                        .HasColumnType("int");

                    b.Property<int>("PhongBanId")
                        .HasColumnType("int");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<string>("TenThietBi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TinhTrangThietBi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("DonViTinhId");

                    b.HasIndex("LoaiThietBiId");

                    b.HasIndex("NhanVienId");

                    b.HasIndex("PhongBanId");

                    b.ToTable("TongHopThietBi");
                });

            modelBuilder.Entity("WebApi.Data.Entites.TongHopToiTruc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DonViSuDungId")
                        .HasColumnType("int");

                    b.Property<bool>("DuPhong")
                        .HasColumnType("bit");

                    b.Property<string>("GhiChu")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("MaQuanLy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MucDichSuDung")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("NgayLap")
                        .HasColumnType("datetime2");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<int>("ThietbiId")
                        .HasColumnType("int");

                    b.Property<string>("TinhTrangThietBi")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("ToiTrucId")
                        .HasColumnType("int");

                    b.Property<string>("ViTriLapDat")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("DonViSuDungId");

                    b.HasIndex("ThietbiId");

                    b.HasIndex("ToiTrucId");

                    b.ToTable("TongHopToiTruc");
                });

            modelBuilder.Entity("WebApi.Data.Entites.TonghopBalang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BaLangId")
                        .HasColumnType("int");

                    b.Property<int>("DonViId")
                        .HasColumnType("int");

                    b.Property<string>("DonViTinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayLap")
                        .HasColumnType("datetime2");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<string>("TinhTrangKyThuat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViTriLapDat")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BaLangId");

                    b.HasIndex("DonViId");

                    b.ToTable("TonghopBalang");
                });

            modelBuilder.Entity("WebApi.Data.Entites.TonghopCamera", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DiaChiIP")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("DonViQuanLyId")
                        .HasColumnType("int");

                    b.Property<int>("DonViTinhId")
                        .HasColumnType("int");

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("KhuVucLapDat")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("LoaiThietBiId")
                        .HasColumnType("int");

                    b.Property<string>("MaQuanLy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("NgayLap")
                        .HasColumnType("datetime2");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<int>("TenThietBiId")
                        .HasColumnType("int");

                    b.Property<string>("TinhTrangThietBi")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ViTriLapDat")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("DonViQuanLyId");

                    b.HasIndex("DonViTinhId");

                    b.HasIndex("LoaiThietBiId");

                    b.HasIndex("TenThietBiId");

                    b.ToTable("TonghopCamera");
                });

            modelBuilder.Entity("WebApi.Data.Entites.TonghopQuatgio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DonViId")
                        .HasColumnType("int");

                    b.Property<string>("GhiChu")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("MaQuanLy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("NgayLap")
                        .HasColumnType("datetime2");

                    b.Property<int>("QuatGioId")
                        .HasColumnType("int");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<string>("TinhTrangThietBi")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ViTriLapDat")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DonViId");

                    b.HasIndex("QuatGioId");

                    b.ToTable("TonghopQuatgio");
                });

            modelBuilder.Entity("WebApi.Data.Entites.Tonghopcapdien", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CapdienId")
                        .HasColumnType("int");

                    b.Property<int>("Dangsudung")
                        .HasColumnType("int");

                    b.Property<int>("DonviId")
                        .HasColumnType("int");

                    b.Property<string>("Donvitinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duphong")
                        .HasColumnType("int");

                    b.Property<string>("Ghichu")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Maquanly")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Ngaythang")
                        .HasColumnType("datetime2");

                    b.Property<int>("Nhaptrongky")
                        .HasColumnType("int");

                    b.Property<int>("Toncuoithang")
                        .HasColumnType("int");

                    b.Property<int>("Tondauthang")
                        .HasColumnType("int");

                    b.Property<int>("Xuattrongky")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CapdienId");

                    b.HasIndex("DonviId");

                    b.ToTable("Tonghopcapdien");
                });

            modelBuilder.Entity("WebApi.Data.Entites.Tonghopgiacotthuyluc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DonViId")
                        .HasColumnType("int");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayLap")
                        .HasColumnType("datetime2");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<int>("ThietBiId")
                        .HasColumnType("int");

                    b.Property<string>("ViTriLapDat")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DonViId");

                    b.HasIndex("ThietBiId");

                    b.ToTable("Tonghopgiacotthuyluc");
                });

            modelBuilder.Entity("WebApi.Data.Entites.VatTu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TenVatTu")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("VatTu");
                });

            modelBuilder.Entity("Api.Data.Entites.ThongsokythuatToitruc", b =>
                {
                    b.HasOne("Api.Data.Entites.Danhmuctoitruc", "Danhmuctoitruc")
                        .WithMany("ThongsokythuatToitrucs")
                        .HasForeignKey("DanhmuctoitrucId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Danhmuctoitruc");
                });

            modelBuilder.Entity("WebApi.Data.Entites.ChiTietPhieuNhap", b =>
                {
                    b.HasOne("WebApi.Data.Entites.DonViTinh", "DonViTinh")
                        .WithMany("ChiTietPhieuNhaps")
                        .HasForeignKey("DonViTinhId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Data.Entites.PhieuNhap", "PhieuNhap")
                        .WithMany("ChiTietPhieuNhaps")
                        .HasForeignKey("PhieuNhapId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Data.Entites.VatTu", "VatTu")
                        .WithMany("ChiTietPhieuNhaps")
                        .HasForeignKey("VatTuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DonViTinh");

                    b.Navigation("PhieuNhap");

                    b.Navigation("VatTu");
                });

            modelBuilder.Entity("WebApi.Data.Entites.ChiTietPhieuXuat", b =>
                {
                    b.HasOne("WebApi.Data.Entites.DonViTinh", "DonViTinh")
                        .WithMany("ChiTietPhieuXuats")
                        .HasForeignKey("DonViTinhId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Data.Entites.PhieuXuat", "PhieuXuat")
                        .WithMany("ChiTietPhieuXuats")
                        .HasForeignKey("PhieuXuatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Data.Entites.VatTu", "VatTu")
                        .WithMany("ChiTietPhieuXuats")
                        .HasForeignKey("VatTuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DonViTinh");

                    b.Navigation("PhieuXuat");

                    b.Navigation("VatTu");
                });

            modelBuilder.Entity("WebApi.Data.Entites.NhanVien", b =>
                {
                    b.HasOne("WebApi.Data.Entites.ChucVu", "ChucVu")
                        .WithMany("NhanViens")
                        .HasForeignKey("ChucVuId");

                    b.HasOne("WebApi.Data.Entites.PhongBan", "PhongBan")
                        .WithMany("NhanViens")
                        .HasForeignKey("PhongBanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChucVu");

                    b.Navigation("PhongBan");
                });

            modelBuilder.Entity("WebApi.Data.Entites.NhanvienImage", b =>
                {
                    b.HasOne("WebApi.Data.Entites.NhanVien", "NhanVien")
                        .WithMany("NhanvienImages")
                        .HasForeignKey("NhanVienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("WebApi.Data.Entites.NhatKyBangTai", b =>
                {
                    b.HasOne("WebApi.Data.Entites.TongHopBangTai", "TongHopBangTai")
                        .WithMany()
                        .HasForeignKey("TongHopBangTaiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TongHopBangTai");
                });

            modelBuilder.Entity("WebApi.Data.Entites.NhatKyBomNuoc", b =>
                {
                    b.HasOne("WebApi.Data.Entites.TongHopBomNuoc", "TongHopBomNuoc")
                        .WithMany("NhatKyBomNuocs")
                        .HasForeignKey("TongHopBomNuocId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TongHopBomNuoc");
                });

            modelBuilder.Entity("WebApi.Data.Entites.NhatKyMayCao", b =>
                {
                    b.HasOne("WebApi.Data.Entites.TongHopMayCao", "TongHopMayCao")
                        .WithMany("NhatKyMayCaos")
                        .HasForeignKey("TongHopMayCaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TongHopMayCao");
                });

            modelBuilder.Entity("WebApi.Data.Entites.NhatKyQuatGio", b =>
                {
                    b.HasOne("WebApi.Data.Entites.TonghopQuatgio", "TonghopQuatgio")
                        .WithMany("NhatKyQuatGios")
                        .HasForeignKey("TonghopquatgioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TonghopQuatgio");
                });

            modelBuilder.Entity("WebApi.Data.Entites.NhatkyCamera", b =>
                {
                    b.HasOne("WebApi.Data.Entites.TonghopCamera", "TonghopCamera")
                        .WithMany("NhatkyCameras")
                        .HasForeignKey("CameraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Data.Entites.PhongBan", "PhongBan")
                        .WithMany("NhatkyCameras")
                        .HasForeignKey("DonViQuanLyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PhongBan");

                    b.Navigation("TonghopCamera");
                });

            modelBuilder.Entity("WebApi.Data.Entites.NhatkyMayxuc", b =>
                {
                    b.HasOne("WebApi.Data.Entites.TongHopMayXuc", "TongHopMayXuc")
                        .WithMany("NhatkyMayxucs")
                        .HasForeignKey("TonghopmayxucId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TongHopMayXuc");
                });

            modelBuilder.Entity("WebApi.Data.Entites.NhatkyTonghoptoitruc", b =>
                {
                    b.HasOne("WebApi.Data.Entites.TongHopToiTruc", "TongHopToiTruc")
                        .WithMany("NhatkyTonghoptoitrucs")
                        .HasForeignKey("TonghoptoitrucId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TongHopToiTruc");
                });

            modelBuilder.Entity("WebApi.Data.Entites.Nhatkyaptomatkhoidongtu", b =>
                {
                    b.HasOne("WebApi.Data.Entites.ThongsoAptomatKhoidongtu", null)
                        .WithMany("Nhatkyaptomatkhoidongtu")
                        .HasForeignKey("ThongsoAptomatKhoidongtuId");

                    b.HasOne("WebApi.Data.Entites.TongHopAptomatKhoidongtu", "TongHopAptomatKhoidongtu")
                        .WithMany("Nhatkyaptomatkhoidongtus")
                        .HasForeignKey("TonghopaptomatkhoidongtuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TongHopAptomatKhoidongtu");
                });

            modelBuilder.Entity("WebApi.Data.Entites.TheoDoiSuaChua", b =>
                {
                    b.HasOne("WebApi.Data.Entites.NhanVien", "NhanVien")
                        .WithMany("TheoDoiSuaChuas")
                        .HasForeignKey("NhanVienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Data.Entites.PhongBan", "PhongBan")
                        .WithMany("TheoDoiSuaChuas")
                        .HasForeignKey("PhongBanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Data.Entites.TongHopThietBi", "TongHopThietBi")
                        .WithMany()
                        .HasForeignKey("TongHopThietBiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NhanVien");

                    b.Navigation("PhongBan");

                    b.Navigation("TongHopThietBi");
                });

            modelBuilder.Entity("WebApi.Data.Entites.ThongSoBomNuoc", b =>
                {
                    b.HasOne("WebApi.Data.Entites.DanhmucBomnuoc", "DanhmucBomnuoc")
                        .WithMany("ThongSoBomNuocs")
                        .HasForeignKey("BomNuocId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DanhmucBomnuoc");
                });

            modelBuilder.Entity("WebApi.Data.Entites.ThongSoKyThuatBangTai", b =>
                {
                    b.HasOne("WebApi.Data.Entites.DanhMucBangTai", "DanhMucBangTai")
                        .WithMany("ThongSoKyThuatBangTais")
                        .HasForeignKey("BangTaiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DanhMucBangTai");
                });

            modelBuilder.Entity("WebApi.Data.Entites.ThongSoKyThuatBienAp", b =>
                {
                    b.HasOne("WebApi.Data.Entites.DanhmucBienap", "DanhmucBienap")
                        .WithMany("ThongSoKyThuatBienAp")
                        .HasForeignKey("BienApId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DanhmucBienap");
                });

            modelBuilder.Entity("WebApi.Data.Entites.ThongSoKyThuatMayCao", b =>
                {
                    b.HasOne("WebApi.Data.Entites.DanhmucMayCao", "DanhmucMayCao")
                        .WithMany("ThongSoKyThuatMayCaos")
                        .HasForeignKey("MayCaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Data.Entites.NhatKyMayCao", null)
                        .WithMany("ThongSoKyThuatMayCaos")
                        .HasForeignKey("NhatKyMayCaoId");

                    b.Navigation("DanhmucMayCao");
                });

            modelBuilder.Entity("WebApi.Data.Entites.ThongsoAptomatKhoidongtu", b =>
                {
                    b.HasOne("WebApi.Data.Entites.DanhmucAptomatKhoidongtu", "DanhmucAptomatKhoidongtu")
                        .WithMany("ThongsoAptomatKhoidongtus")
                        .HasForeignKey("DanhmucaptomatKhoidongtuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DanhmucAptomatKhoidongtu");
                });

            modelBuilder.Entity("WebApi.Data.Entites.ThongsoNeo", b =>
                {
                    b.HasOne("WebApi.Data.Entites.DanhmucNeo", "DanhmucNeo")
                        .WithMany("ThongSoNeos")
                        .HasForeignKey("NeoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DanhmucNeo");
                });

            modelBuilder.Entity("WebApi.Data.Entites.ThongsoQuatgio", b =>
                {
                    b.HasOne("WebApi.Data.Entites.DanhmucQuatgio", "DanhmucQuatgio")
                        .WithMany("ThongsoQuatgios")
                        .HasForeignKey("QuatgioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DanhmucQuatgio");
                });

            modelBuilder.Entity("WebApi.Data.Entites.ThongsokythuatMayxuc", b =>
                {
                    b.HasOne("WebApi.Data.Entites.MayXuc", "MayXuc")
                        .WithMany("ThongsokythuatMayxucs")
                        .HasForeignKey("MayXucId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MayXuc");
                });

            modelBuilder.Entity("WebApi.Data.Entites.TongHopAptomatKhoidongtu", b =>
                {
                    b.HasOne("WebApi.Data.Entites.PhongBan", "PhongBan")
                        .WithMany("TongHopAptomatKhoidongtus")
                        .HasForeignKey("DonViId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Data.Entites.DanhmucAptomatKhoidongtu", "DanhmucAptomatKhoidongtu")
                        .WithMany("TongHopAptomatKhoidongtus")
                        .HasForeignKey("aptomatkhoidongtuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DanhmucAptomatKhoidongtu");

                    b.Navigation("PhongBan");
                });

            modelBuilder.Entity("WebApi.Data.Entites.TongHopBangTai", b =>
                {
                    b.HasOne("WebApi.Data.Entites.DanhMucBangTai", "DanhMucBangTai")
                        .WithMany("TongHopBangTais")
                        .HasForeignKey("BangTaiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Data.Entites.PhongBan", "PhongBan")
                        .WithMany("TongHopBangTais")
                        .HasForeignKey("DonViId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DanhMucBangTai");

                    b.Navigation("PhongBan");
                });

            modelBuilder.Entity("WebApi.Data.Entites.TongHopBomNuoc", b =>
                {
                    b.HasOne("WebApi.Data.Entites.DanhmucBomnuoc", "DanhmucBomnuoc")
                        .WithMany("TongHopBomNuocs")
                        .HasForeignKey("BomNuocId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Data.Entites.PhongBan", "PhongBan")
                        .WithMany("TongHopBomNuocs")
                        .HasForeignKey("DonViId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DanhmucBomnuoc");

                    b.Navigation("PhongBan");
                });

            modelBuilder.Entity("WebApi.Data.Entites.TongHopKhoan", b =>
                {
                    b.HasOne("WebApi.Data.Entites.PhongBan", "PhongBan")
                        .WithMany("TongHopKhoans")
                        .HasForeignKey("DonViId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Data.Entites.DanhMucKhoan", "DanhMucKhoan")
                        .WithMany("TongHopKhoans")
                        .HasForeignKey("KhoanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DanhMucKhoan");

                    b.Navigation("PhongBan");
                });

            modelBuilder.Entity("WebApi.Data.Entites.TongHopMayCao", b =>
                {
                    b.HasOne("WebApi.Data.Entites.PhongBan", "PhongBan")
                        .WithMany("TongHopMayCaos")
                        .HasForeignKey("DonViId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Data.Entites.DanhmucMayCao", "DanhmucMayCao")
                        .WithMany("TongHopMayCaos")
                        .HasForeignKey("MayCaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DanhmucMayCao");

                    b.Navigation("PhongBan");
                });

            modelBuilder.Entity("WebApi.Data.Entites.TongHopMayXuc", b =>
                {
                    b.HasOne("WebApi.Data.Entites.LoaiThietBi", "LoaiThietBi")
                        .WithMany("TongHopMayXucs")
                        .HasForeignKey("LoaiThietBiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Data.Entites.MayXuc", "MayXuc")
                        .WithMany("TongHopMayXucs")
                        .HasForeignKey("MayXucId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Data.Entites.PhongBan", "PhongBan")
                        .WithMany("TongHopMayXucs")
                        .HasForeignKey("PhongBanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoaiThietBi");

                    b.Navigation("MayXuc");

                    b.Navigation("PhongBan");
                });

            modelBuilder.Entity("WebApi.Data.Entites.TongHopNeo", b =>
                {
                    b.HasOne("WebApi.Data.Entites.PhongBan", "PhongBan")
                        .WithMany("TongHopNeos")
                        .HasForeignKey("DonViId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Data.Entites.DanhmucNeo", "DanhmucNeo")
                        .WithMany("TongHopNeos")
                        .HasForeignKey("NeoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DanhmucNeo");

                    b.Navigation("PhongBan");
                });

            modelBuilder.Entity("WebApi.Data.Entites.TongHopRole", b =>
                {
                    b.HasOne("WebApi.Data.Entites.PhongBan", "PhongBan")
                        .WithMany("TongHopRoles")
                        .HasForeignKey("PhongBanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Data.Entites.DanhMucRole", "DanhmucRole")
                        .WithMany("TongHopRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DanhmucRole");

                    b.Navigation("PhongBan");
                });

            modelBuilder.Entity("WebApi.Data.Entites.TongHopThietBi", b =>
                {
                    b.HasOne("WebApi.Data.Entites.DonViTinh", "DonViTinh")
                        .WithMany("TongHopThietBis")
                        .HasForeignKey("DonViTinhId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Data.Entites.LoaiThietBi", "LoaiThietBi")
                        .WithMany("TongHopThietBis")
                        .HasForeignKey("LoaiThietBiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Data.Entites.NhanVien", "NhanVien")
                        .WithMany("TongHopThietBis")
                        .HasForeignKey("NhanVienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Data.Entites.PhongBan", "PhongBan")
                        .WithMany("TongHopThietBis")
                        .HasForeignKey("PhongBanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DonViTinh");

                    b.Navigation("LoaiThietBi");

                    b.Navigation("NhanVien");

                    b.Navigation("PhongBan");
                });

            modelBuilder.Entity("WebApi.Data.Entites.TongHopToiTruc", b =>
                {
                    b.HasOne("WebApi.Data.Entites.PhongBan", "PhongBan")
                        .WithMany("TongHopToiTrucs")
                        .HasForeignKey("DonViSuDungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api.Data.Entites.Danhmuctoitruc", "Danhmuctoitruc")
                        .WithMany()
                        .HasForeignKey("ThietbiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Data.Entites.ToiTruc", null)
                        .WithMany("TongHopToiTrucs")
                        .HasForeignKey("ToiTrucId");

                    b.Navigation("Danhmuctoitruc");

                    b.Navigation("PhongBan");
                });

            modelBuilder.Entity("WebApi.Data.Entites.TonghopBalang", b =>
                {
                    b.HasOne("WebApi.Data.Entites.DanhmucBaLang", "DanhmucBaLang")
                        .WithMany("TonghopBalangs")
                        .HasForeignKey("BaLangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Data.Entites.PhongBan", "PhongBan")
                        .WithMany("TonghopBalangs")
                        .HasForeignKey("DonViId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DanhmucBaLang");

                    b.Navigation("PhongBan");
                });

            modelBuilder.Entity("WebApi.Data.Entites.TonghopCamera", b =>
                {
                    b.HasOne("WebApi.Data.Entites.PhongBan", "PhongBan")
                        .WithMany("TonghopCameras")
                        .HasForeignKey("DonViQuanLyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Data.Entites.DonViTinh", "DonViTinh")
                        .WithMany("TonghopCameras")
                        .HasForeignKey("DonViTinhId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Data.Entites.LoaiThietBi", "LoaiThietBi")
                        .WithMany("TonghopCameras")
                        .HasForeignKey("LoaiThietBiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Data.Entites.Camera", "Camera")
                        .WithMany("TonghopCameras")
                        .HasForeignKey("TenThietBiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Camera");

                    b.Navigation("DonViTinh");

                    b.Navigation("LoaiThietBi");

                    b.Navigation("PhongBan");
                });

            modelBuilder.Entity("WebApi.Data.Entites.TonghopQuatgio", b =>
                {
                    b.HasOne("WebApi.Data.Entites.PhongBan", "PhongBan")
                        .WithMany("TonghopQuatgio")
                        .HasForeignKey("DonViId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Data.Entites.DanhmucQuatgio", "DanhmucQuatgio")
                        .WithMany("TonghopQuatgios")
                        .HasForeignKey("QuatGioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DanhmucQuatgio");

                    b.Navigation("PhongBan");
                });

            modelBuilder.Entity("WebApi.Data.Entites.Tonghopcapdien", b =>
                {
                    b.HasOne("WebApi.Data.Entites.Capdien", "Capdien")
                        .WithMany("Tonghopcapdiens")
                        .HasForeignKey("CapdienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Data.Entites.PhongBan", "PhongBan")
                        .WithMany("Tonghopcapdiens")
                        .HasForeignKey("DonviId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Capdien");

                    b.Navigation("PhongBan");
                });

            modelBuilder.Entity("WebApi.Data.Entites.Tonghopgiacotthuyluc", b =>
                {
                    b.HasOne("WebApi.Data.Entites.PhongBan", "PhongBan")
                        .WithMany("Tonghopgiacotthuylucs")
                        .HasForeignKey("DonViId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Data.Entites.Danhmucgiacotthuyluc", "Danhmucgiacotthuyluc")
                        .WithMany("Tonghopgiacotthuylucs")
                        .HasForeignKey("ThietBiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Danhmucgiacotthuyluc");

                    b.Navigation("PhongBan");
                });

            modelBuilder.Entity("Api.Data.Entites.Danhmuctoitruc", b =>
                {
                    b.Navigation("ThongsokythuatToitrucs");
                });

            modelBuilder.Entity("WebApi.Data.Entites.Camera", b =>
                {
                    b.Navigation("TonghopCameras");
                });

            modelBuilder.Entity("WebApi.Data.Entites.Capdien", b =>
                {
                    b.Navigation("Tonghopcapdiens");
                });

            modelBuilder.Entity("WebApi.Data.Entites.ChucVu", b =>
                {
                    b.Navigation("NhanViens");
                });

            modelBuilder.Entity("WebApi.Data.Entites.DanhMucBangTai", b =>
                {
                    b.Navigation("ThongSoKyThuatBangTais");

                    b.Navigation("TongHopBangTais");
                });

            modelBuilder.Entity("WebApi.Data.Entites.DanhMucKhoan", b =>
                {
                    b.Navigation("TongHopKhoans");
                });

            modelBuilder.Entity("WebApi.Data.Entites.DanhMucRole", b =>
                {
                    b.Navigation("TongHopRoles");
                });

            modelBuilder.Entity("WebApi.Data.Entites.DanhmucAptomatKhoidongtu", b =>
                {
                    b.Navigation("ThongsoAptomatKhoidongtus");

                    b.Navigation("TongHopAptomatKhoidongtus");
                });

            modelBuilder.Entity("WebApi.Data.Entites.DanhmucBaLang", b =>
                {
                    b.Navigation("TonghopBalangs");
                });

            modelBuilder.Entity("WebApi.Data.Entites.DanhmucBienap", b =>
                {
                    b.Navigation("ThongSoKyThuatBienAp");
                });

            modelBuilder.Entity("WebApi.Data.Entites.DanhmucBomnuoc", b =>
                {
                    b.Navigation("ThongSoBomNuocs");

                    b.Navigation("TongHopBomNuocs");
                });

            modelBuilder.Entity("WebApi.Data.Entites.DanhmucMayCao", b =>
                {
                    b.Navigation("ThongSoKyThuatMayCaos");

                    b.Navigation("TongHopMayCaos");
                });

            modelBuilder.Entity("WebApi.Data.Entites.DanhmucNeo", b =>
                {
                    b.Navigation("ThongSoNeos");

                    b.Navigation("TongHopNeos");
                });

            modelBuilder.Entity("WebApi.Data.Entites.DanhmucQuatgio", b =>
                {
                    b.Navigation("ThongsoQuatgios");

                    b.Navigation("TonghopQuatgios");
                });

            modelBuilder.Entity("WebApi.Data.Entites.Danhmucgiacotthuyluc", b =>
                {
                    b.Navigation("Tonghopgiacotthuylucs");
                });

            modelBuilder.Entity("WebApi.Data.Entites.DonViTinh", b =>
                {
                    b.Navigation("ChiTietPhieuNhaps");

                    b.Navigation("ChiTietPhieuXuats");

                    b.Navigation("TongHopThietBis");

                    b.Navigation("TonghopCameras");
                });

            modelBuilder.Entity("WebApi.Data.Entites.LoaiThietBi", b =>
                {
                    b.Navigation("TongHopMayXucs");

                    b.Navigation("TongHopThietBis");

                    b.Navigation("TonghopCameras");
                });

            modelBuilder.Entity("WebApi.Data.Entites.MayXuc", b =>
                {
                    b.Navigation("ThongsokythuatMayxucs");

                    b.Navigation("TongHopMayXucs");
                });

            modelBuilder.Entity("WebApi.Data.Entites.NhanVien", b =>
                {
                    b.Navigation("NhanvienImages");

                    b.Navigation("TheoDoiSuaChuas");

                    b.Navigation("TongHopThietBis");
                });

            modelBuilder.Entity("WebApi.Data.Entites.NhatKyMayCao", b =>
                {
                    b.Navigation("ThongSoKyThuatMayCaos");
                });

            modelBuilder.Entity("WebApi.Data.Entites.PhieuNhap", b =>
                {
                    b.Navigation("ChiTietPhieuNhaps");
                });

            modelBuilder.Entity("WebApi.Data.Entites.PhieuXuat", b =>
                {
                    b.Navigation("ChiTietPhieuXuats");
                });

            modelBuilder.Entity("WebApi.Data.Entites.PhongBan", b =>
                {
                    b.Navigation("NhanViens");

                    b.Navigation("NhatkyCameras");

                    b.Navigation("TheoDoiSuaChuas");

                    b.Navigation("TongHopAptomatKhoidongtus");

                    b.Navigation("TongHopBangTais");

                    b.Navigation("TongHopBomNuocs");

                    b.Navigation("TongHopKhoans");

                    b.Navigation("TongHopMayCaos");

                    b.Navigation("TongHopMayXucs");

                    b.Navigation("TongHopNeos");

                    b.Navigation("TongHopRoles");

                    b.Navigation("TongHopThietBis");

                    b.Navigation("TongHopToiTrucs");

                    b.Navigation("TonghopBalangs");

                    b.Navigation("TonghopCameras");

                    b.Navigation("TonghopQuatgio");

                    b.Navigation("Tonghopcapdiens");

                    b.Navigation("Tonghopgiacotthuylucs");
                });

            modelBuilder.Entity("WebApi.Data.Entites.ThongsoAptomatKhoidongtu", b =>
                {
                    b.Navigation("Nhatkyaptomatkhoidongtu");
                });

            modelBuilder.Entity("WebApi.Data.Entites.ToiTruc", b =>
                {
                    b.Navigation("TongHopToiTrucs");
                });

            modelBuilder.Entity("WebApi.Data.Entites.TongHopAptomatKhoidongtu", b =>
                {
                    b.Navigation("Nhatkyaptomatkhoidongtus");
                });

            modelBuilder.Entity("WebApi.Data.Entites.TongHopBomNuoc", b =>
                {
                    b.Navigation("NhatKyBomNuocs");
                });

            modelBuilder.Entity("WebApi.Data.Entites.TongHopMayCao", b =>
                {
                    b.Navigation("NhatKyMayCaos");
                });

            modelBuilder.Entity("WebApi.Data.Entites.TongHopMayXuc", b =>
                {
                    b.Navigation("NhatkyMayxucs");
                });

            modelBuilder.Entity("WebApi.Data.Entites.TongHopToiTruc", b =>
                {
                    b.Navigation("NhatkyTonghoptoitrucs");
                });

            modelBuilder.Entity("WebApi.Data.Entites.TonghopCamera", b =>
                {
                    b.Navigation("NhatkyCameras");
                });

            modelBuilder.Entity("WebApi.Data.Entites.TonghopQuatgio", b =>
                {
                    b.Navigation("NhatKyQuatGios");
                });

            modelBuilder.Entity("WebApi.Data.Entites.VatTu", b =>
                {
                    b.Navigation("ChiTietPhieuNhaps");

                    b.Navigation("ChiTietPhieuXuats");
                });
#pragma warning restore 612, 618
        }
    }
}
